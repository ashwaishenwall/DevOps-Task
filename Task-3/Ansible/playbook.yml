---
- name: Configure web server and deploy Node.js application
  hosts: web
  become: yes
  vars:
    node_app_repo: "https://github.com/ashwaishenwall/DevOps-Task.git"  # Replace with your actual repository URL
    node_app_dir: "/var/www/task1"
    app_folder: "Task-1"  # Folder where the Node.js code is located in the repo
    app_port: 3000  # The port your Node.js app is running on (adjust if necessary)

  tasks:
    - name: Install required packages
      yum:
        name:
          - git
          - nodejs
          - npm
        state: present
        update_cache: yes

    - name: Enable nginx1 package using amazon-linux-extras
      shell: |
        sudo amazon-linux-extras enable nginx1
        sudo yum install -y nginx
      args:
        executable: /bin/bash

    - name: Clone the entire Node.js application repository
      git:
        repo: "{{ node_app_repo }}"
        dest: "{{ node_app_dir }}"
        version: "main"
        clone: yes
        update: yes

    - name: Install Node.js dependencies
      npm:
        path: "{{ node_app_dir }}/{{ app_folder }}"
        state: present

    - name: Ensure /etc/nginx/conf.d exists and create if necessary
      file:
        path: "/etc/nginx/conf.d"
        state: directory
        mode: '0755'

    - name: Configure Nginx for Node.js application
      template:
        src: nginx-config.j2
        dest: /etc/nginx/conf.d/task1.conf  # Correct location for Nginx config on Amazon Linux
      notify: Restart Nginx

    - name: Remove default Nginx configuration
      file:
        path: /etc/nginx/conf.d/default.conf
        state: absent
      notify: Restart Nginx

    - name: Start Node.js application
      shell: "nohup node {{ node_app_dir }}/{{ app_folder }}/app.js > /dev/null 2>&1 &"
      args:
        chdir: "{{ node_app_dir }}/{{ app_folder }}"

    - name: Wait for Node.js application to start
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ app_port }}"
        state: started
        timeout: 60

    - name: Curl to check if Node.js application is running
      shell: |
        curl -s http://{{ ansible_host }}:{{ app_port }}
      register: curl_output
      ignore_errors: yes

    - name: Output curl response
      debug:
        msg: "Response from curl: {{ curl_output.stdout }}"

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

